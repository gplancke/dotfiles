# Shell utility functions for chezmoi scripts
# Contains common functions used across installation scripts


#############################################
# Load Nix environment
#############################################
load_nix() {
	local nix_profile="$HOME/.nix-profile"

	if command -v nix >/dev/null 2>&1; then
		printf '...Loading Nix environment\n'

		if [ -d "$nix_profile" ]; then
			export NIX_PATH="$nix_profile/etc/nix:$NIX_PATH"
			export PATH="$nix_profile/bin:$PATH"
			export NIX_PROFILES="$nix_profile/profiles"
			export NIX_USER_PROFILE_DIR="$nix_profile/profiles/per-user/$USER"
		fi

		[ -f "${nix_profile}/etc/profile.d/nix.sh" ] && . "${nix_profile}/etc/profile.d/nix.sh"

		[ ! -f "${nix_profile}/etc/profile.d/nix.sh" ] \
			&& [ -f "/nix/var/nix/profiles/default/etc/profile.d/nix.sh" ] \
			&& . /nix/var/nix/profiles/default/etc/profile.d/nix.sh

		[ -f "/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh" ] \
			&& . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
	fi
}

#############################################
# Load Home Manager
#############################################
load_homemanager() {
	if command -v home-manager >/dev/null 2>&1; then
		printf '...Loading homemanager environment\n'
		# 	if [ -f "/etc/profiles/per-user/$USER/etc/profile.d/hm-session-vars.sh" ]; then
		# 		. "/etc/profiles/per-user/$USER/etc/profile.d/hm-session-vars.sh"
		# 	elif [ -f "$HOME/.local/state/nix/profiles/profile/etc/profile.d/hm-session-vars.sh" ]; then
		# 		. "$HOME/.local/state/nix/profiles/profile/etc/profile.d/hm-session-vars.sh"
		# 	elif [ -f "$HOME/.nix-profile/etc/profile.d/hm-session-vars.sh" ]; then
		# 		. "$HOME/.nix-profile/etc/profile.d/hm-session-vars.sh"
		# 	fi
	fi
}

#############################################
# Load Devbox environment
#############################################
load_devbox() {
	if command -v devbox >/dev/null 2>&1; then
		printf '...Loading devbox environment\n'
		eval "$(devbox global shellenv)"
	fi
}

#############################################
# Install nix on darwin and linux
# On darwin, we add the nix-darwin util
#############################################
install_nix() {
	printf '[NIX] Installing Nix package manager\n'

  local os_type=$1
  local nix_profile="$HOME/.nix-profile"
  local installer_url="https://install.determinate.systems/nix"
  local uninstall_script="$HOME/.local/bin/nix-uninstall"

  # If Nix isn't already installedâ€¦
  if ! command -v nix >/dev/null 2>&1; then
    printf '...Installing Nix via %s\n' "$installer_url"
		[ "$os_type" = "darwin" ] && sudo ln -sf /etc/ssl/cert.pem /etc/ssl/certs/ca-certificates.crt
    curl --proto '=https' --tlsv1.2 -sSfL "$installer_url" | sh -s -- install --determinate --no-confirm
		load_nix
  else
    printf '...Nix is already installed at %s\n' "$nix_profile"
  fi
}

#############################################
# Install Home Manager
#############################################
install_homemanager() {
	printf '[HM] Installing Home Manager...\n'
  load_nix
}

#############################################
# Install Devbox
#############################################
install_devbox() {
	printf '[DEVBOX] Installing Devbox...\n'
	load_nix
	if ! command -v devbox >/dev/null 2>&1; then
		printf '...Installing via https://get.jetify.com/devbox\n'
		curl -fsSL https://get.jetify.com/devbox | bash -s -- --force
	fi
}

#############################################
# Install Nix environment packages
#############################################
install_nix_bins() {
	printf '[NIX] Installing Nix packages\n'

	local nix_file=".config/nix"
	local current_dir="$(pwd)"

	# Nix
	if command -v nix >/dev/null 2>&1 && [ -f "$HOME/$nix_file/flake.nix" ]; then
		printf '...Installing Nix packages from %s\n' "$nix_file"
		cd $HOME/$nix_file && nix profile add '.#homies' && cd "$current_dir"
	fi

	# Home manager
	if command -v home-manager >/dev/null 2>&1; then
		printf '...Installing Home Manager packages'
		home-manager switch
	fi

	# Devbox
	if command -v devbox >/dev/null 2>&1; then
		local db_path
		db_path="$(devbox global path)"
		if [ -f "$db_path/devbox.json" ]; then
			printf '...Installing Devbox packages from %s/devbox.json\n' "$db_path"
			devbox global install
		fi
	fi
}
