printf "sourcing .profile\n"

##########################
# Platform Specifics
##########################

if uname -r | grep -q 'microsoft'; then
	export WSL="1"
	export LINUX="1"
	[ -f "${HOME}/.shell.wsl" ] && . "${HOME}/.shell.wsl"
elif [ "$(uname)" = "Darwin" ]; then
	export MACOS="1"
	export SDKROOT=$(xcrun --show-sdk-path)
	export XDG_CONFIG_HOME=$HOME/.config

	# [ -d "/opt/homebrew/opt/libiconv/lib" ] && export LDFLAGS="-L/opt/homebrew/opt/libiconv/lib"

	[ -f "${HOME}/.shell.macos" ] && . "${HOME}/.shell.macos"
else
	export LINUX="1"
	[ -f "${HOME}/.shell.linux" ] && . "${HOME}/.shell.linux"
fi

##########################
# Secrets
##########################
[ -f "$HOME/.shell.secrets" ] && . "$HOME/.shell.secrets"

##########################
# Exports
##########################
export EDITOR=nvim
export WORK_DIR="$HOME/Workspace/Projects"

export NIXPKGS_ALLOW_UNFREE=1
export HOMEBREW_NO_AUTO_UPDATE=1

export NIX_PATH=darwin-config="$HOME/.nixpkgs/darwin-configuration.nix:$HOME/.nix-defexpr/channels" # ${NIX_PATH:+:}$NIX_PATH
export NIX_DIR="$HOME/.nix-profile"
export ASDF_DIR="$HOME/.local/share/asdf"

export FZF_HOME="$HOME/.fzf"
export EMACS_HOME="$HOME/.emacs.d"

export RUST_HOME="$HOME/.cargo"                      # Rust
export NPM_HOME="$HOME/.local/share/node_modules"    # Nodejs
export DENO_HOME="$HOME/.deno"                       # Deno
export PNPM_HOME="$HOME/.local/share/pnpm"           # Pnpm
export GOPATH=$HOME/.go                              # Go
export GEM_HOME=$HOME/.local/share/gems              # Ruby
export PIP_HOME="$HOME/.local/share/python_packages" # Python
export DIRENV_LOG_FORMAT=

# Android and Java
export FLUTTER_ROOT="$HOME/.local/share/flutter" # Flutter
export DART_HOME="$HOME/.pub-cache"              # Dart
[ "$LINUX" = "1" ] && [ -d "$HOME/Android/Sdk" ] && export ANDROID_HOME="$HOME/Android/Sdk"
[ "$MACOS" = "1" ] && [ -d "$HOME/Library/Android/sdk" ] && export ANDROID_HOME="$HOME/Library/Android/sdk"
[ "$LINUX" = "1" ] && [ -d "/usr/lib/jvm/java-8-openjdk" ] && export JAVA_HOME="/usr/lib/jvm/java-8-openjdk"

# Tmux
export TMUX_POWERLINE_DEFAULT_BACKGROUND_COLOR='0'
export TMUX_POWERLINE_DEFAULT_FOREGROUND_COLOR='255'

##########################
# Path
##########################
[ "$LINUX" = "1" ] && [ -d "/home/linuxbrew/.linuxbrew" ] && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
[ "$MACOS" = "1" ] && [ -f "/opt/homebrew/bin/brew" ] && eval "$(/opt/homebrew/bin/brew shellenv)"
[ "$MACOS" = "1" ] && [ ! -f "/opt/homebrew/bin/brew" ] && [ -f "/usr/local/bin/brew" ] && eval "$(/usr/local/bin/brew shellenv)"

[ -d "${HOME}/.local/bin" ] && PATH="${HOME}/.local/bin:${PATH}"

[ -d "${FZF_HOME}/bin" ] && PATH="${PATH}:${FZF_HOME}/bin"
[ -d "${EMACS_HOME}/bin" ] && PATH="${PATH}:${EMACS_HOME}/bin"

[ -d "${GOPATH}/bin" ] && PATH="${PATH}:${GOPATH}/bin"
[ -d "${NPM_HOME}/bin" ] && PATH="${PATH}:${NPM_HOME}/bin"
[ -d "${DENO_HOME}/bin" ] && PATH="${PATH}:${DENO_HOME}/bin"
[ -d "${PNPM_HOME}" ] && PATH="${PATH}:${PNPM_HOME}"
[ -d "${GEM_HOME}/bin" ] && PATH="${PATH}:${GEM_HOME}/bin"
[ -d "${PIP_HOME}/bin" ] && PATH="${PATH}:${PIP_HOME}/bin"

[ -d "${JAVA_HOME}/bin" ] && PATH="${PATH}:${JAVA_HOME}/bin"
[ -d "${ANDROID_HOME}/cmdline-tools/latest/bin" ] && PATH="${PATH}:${ANDROID_HOME}/cmdline-tools/latest/bin"
[ -d "${ANDROID_HOME}/platform-tools" ] && PATH="${PATH}:${ANDROID_HOME}/platform-tools"
[ -d "${ANDROID_HOME}/bin" ] && PATH="${PATH}:${ANDROID_HOME}/bin"
[ -d "${FLUTTER_ROOT}/bin" ] && PATH="${PATH}:${FLUTTER_ROOT}/bin"
[ -d "${DART_HOME}/bin" ] && PATH="${PATH}:${DART_HOME}/bin"

[ -d "${RUST_HOME}/bin" ] && PATH="${PATH}:${RUST_HOME}/bin"
[ -d "${RUST_HOME}" ] && [ -f "${RUST_HOME}/env" ] && source "${RUST_HOME}/env"

##########################
# Extensions
##########################
command -v fnm >/dev/null 2>&1 && eval "$(fnm env)"
[ -f "${ASDF_DIR}/asdf.sh" ] && . "${ASDF_DIR}/asdf.sh"

{ [ -f "${NIX_DIR}/etc/profile.d/nix.sh" ] && . "${NIX_DIR}/etc/profile.d/nix.sh"; } ||
	{ [ -f "/nix/var/nix/profiles/default/etc/profile.d/nix.sh" ] && . "/nix/var/nix/profiles/default/etc/profile.d/nix.sh"; }

[ -f "/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh" ] && . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh

{ [ -f "/etc/profiles/per-user/$USER/etc/profile.d/hm-session-vars.sh" ] && . "/etc/profiles/per-user/$USER/etc/profile.d/hm-session-vars.sh"; } ||
	{ [ -f "$HOME/.local/state/nix/profiles/profile/etc/profile.d/hm-session-vars.sh" ] && . "$HOME/.local/state/nix/profiles/profile/etc/profile.d/hm-session-vars.sh"; } ||
	{ [ -n "${NIX_DIR:-}" ] && [ -f "$NIX_DIR/etc/profile.d/hm-session-vars.sh" ] && . "$NIX_DIR/etc/profile.d/hm-session-vars.sh"; }

command -v devbox >/dev/null 2>&1 && eval "$(devbox global shellenv)"
