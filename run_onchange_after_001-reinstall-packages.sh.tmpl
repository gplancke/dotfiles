#!/bin/bash

load_nix() {
	local nix_profile="$HOME/.nix-profile"

	if [ -d "$nix_profile" ]; then
		export NIX_PATH="$nix_profile/etc/nix:$NIX_PATH"
		export PATH="$nix_profile/bin:$PATH"
		export NIX_PROFILES="$nix_profile/profiles"
		export NIX_USER_PROFILE_DIR="$nix_profile/profiles/per-user/$USER"
	fi
}

load_brew() {
	local brew_bin=$1

  if [ -x "$brew_bin" ]; then
    eval "$("$brew_bin" shellenv)"
  fi
}

load_devbox() {
  if command -v devbox >/dev/null 2>&1; then
    eval "$(devbox global shellenv)"
  fi
}

install_bins() {
  local nix_file="$HOME/.env.nix"

  # Nix
  if command -v nix-env >/dev/null 2>&1 && [ -f "$nix_file" ]; then
    printf 'Installing Nix environment from %s\n' "$nix_file"
    nix-env -irf "$nix_file"
  fi

  # Devbox
  if command -v devbox >/dev/null 2>&1; then
    local db_path
    db_path="$(devbox global path)"
    if [ -f "$db_path/devbox.json" ]; then
      printf 'Installing Devbox environment from %s/devbox.json\n' "$db_path"
      devbox global install
    fi
  fi
}

{{ if eq .chezmoi.os "darwin" -}}

load_nix
load_devbox
load_brew "/opt/homebrew/bin/brew"
install_bins

if [ ! -x "$(command -v brew)" ]; then
	echo "No brew found, ...skipping"
	exit 0
fi

brew bundle --no-lock --file=/dev/stdin <<EOF
{{ range .packages.darwin.brews -}}
brew {{ . | quote }}
{{ end -}}
{{ range .packages.darwin.casks -}}
cask {{ . | quote }}
{{ end -}}
EOF

exit 0

{{ else if eq .chezmoi.os "linux" -}}

load_nix
load_devbox
load_brew "/home/linuxbrew/.linuxbrew/bin/brew"
install_bins

{{ range .packages.linux.apt -}}
sudo apt install -y {{ . | quote }}
{{ end -}}

if [ ! -x "$(command -v brew)" ]; then
	echo "No brew found, ...skipping"
	exit 0
fi

brew bundle --file=/dev/stdin <<EOF
{{ range .packages.linux.brews -}}
brew {{ . | quote }}
{{ end -}}
{{ range .packages.linux.casks -}}
cask {{ . | quote }}
{{ end -}}
EOF

exit 0

{{ end -}}
