##########################
# Platform Specifics
##########################
if [ "$WSL" = "1" ] ; then
  [ -f "${HOME}/.shell.wsl" ] && . "${HOME}/.shell.wsl"
elif [ "$MACOS" = "1" ]; then
  [ -f "${HOME}/.shell.macos" ] && . "${HOME}/.shell.macos"
else
  [ -f "${HOME}/.shell.linux" ] && . "${HOME}/.shell.linux"
fi

##########################
# Installers
##########################
[ -f "$HOME/.shell.installers" ] && . "$HOME/.shell.installers"

##########################
# Exports
##########################
[ -z "$TMUX" ] && export TERM="xterm-256color"
[ -z "$BASE16_SHELL" ] && export BASE16_SHELL="$HOME/.local/share/base16-manager/chriskempson/base16-shell/"

##########################
# Themes
##########################
[ -f "${HOME}/.base16_theme" ] \
  && [ -z "$SSH_TTY" ] \
  && [ -z "$IN_NIX_SHELL" ] \
  && [ "$TERM_PROGRAM" != "vscode" ] \
  && . "${HOME}/.base16_theme"

[ -f "${HOME}/.fzf.colors" ] && . "${HOME}/.fzf.colors"

##########################
# Path
##########################
[ -d "${HOME}/.local/bin" ] && PATH="${HOME}/.local/bin:${PATH}"
[ -d "${NIX_DIR}" ] && PATH="${NIX_DIR}/bin:${PATH}"

[ -d "${FZF_HOME}/bin" ] && PATH="${PATH}:${FZF_HOME}/bin"
[ -d "${EMACS_HOME}/bin" ] && PATH="${PATH}:${EMACS_HOME}/bin"

[ -d "${GOPATH}/bin" ] && PATH="${PATH}:${GOPATH}/bin"
[ -d "${NPM_HOME}/bin" ] && PATH="${PATH}:${NPM_HOME}/bin"
[ -d "${DENO_HOME}/bin" ] && PATH="${PATH}:${DENO_HOME}/bin"
[ -d "${PNPM_HOME}" ] && PATH="${PATH}:${PNPM_HOME}"
[ -d "${GEM_HOME}/bin" ] && PATH="${PATH}:${GEM_HOME}/bin"
[ -d "${PIP_HOME}/bin" ] && PATH="${PATH}:${PIP_HOME}/bin"

[ -d "${JAVA_HOME}/bin" ] && PATH="${PATH}:${JAVA_HOME}/bin"
[ -d "${ANDROID_HOME}/cmdline-tools/latest/bin" ] && PATH="${PATH}:${ANDROID_HOME}/cmdline-tools/latest/bin"
[ -d "${ANDROID_HOME}/platform-tools" ] && PATH="${PATH}:${ANDROID_HOME}/platform-tools"
[ -d "${ANDROID_HOME}/bin" ] && PATH="${PATH}:${ANDROID_HOME}/bin"
[ -d "${FLUTTER_ROOT}/bin" ] && PATH="${PATH}:${FLUTTER_ROOT}/bin"
[ -d "${DART_HOME}/bin" ] && PATH="${PATH}:${DART_HOME}/bin"

[ -d "${RUST_HOME}/bin" ] && PATH="${PATH}:${RUST_HOME}/bin"
[ -d "${RUST_HOME}" ] && [ -f "${RUST_HOME}/env" ] && source "${RUST_HOME}/env"

##########################
# Links
##########################
function setup_link() {
	local cli_plugins="${HOME}/.docker/cli-plugins"
	local bin="$1"

	mkdir -p $cli_plugins

	if which $bin >/dev/null 2>&1 && [ ! -L "${cli_plugins}/$bin" ]; then
		local bin_path=$(which $bin)
		ln -sf $(which "${bin}") "${cli_plugins}/${bin}"
	fi
}

for bin in docker-buildx docker-compose; do
	if [ "$MACOS" = "1" ] || [ "$LINUX" = "1" ]; then
		setup_link $bin
	fi
done

##########################
# Aliases
##########################
[ -f "$HOME/.shell.aliases" ] && . "$HOME/.shell.aliases"

if type install_theme_manager >/dev/null 2>&1; then
	install_theme_manager
fi
if type install_tmux_manager >/dev/null 2>&1; then
	install_tmux_manager
fi

# install_rust
# install_cocoa_pods
# install_flutter
